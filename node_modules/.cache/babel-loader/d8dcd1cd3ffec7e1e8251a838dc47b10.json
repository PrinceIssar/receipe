{"ast":null,"code":"var _jsxFileName = \"/Users/princeissar/git/BeCode/React-Projects/receipe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport axios from \"axios\";\nimport Recipe from \"./Recipe\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // useEffect need for api\n  const APP_ID = '7a2529fc';\n  const APP_KEY = '61efe58ac251fd4cb77555211348d646\\t';\n  const [recipe, setRecipe] = useState([]);\n  const [search, setSearch] = useState(\"\"); // not to have a default food\n  // don't want to render everytime someone writes a word but once he click search button\n\n  const [query, setQuery] = useState('chicken');\n  useEffect(() => {\n    //\n    getRecipe();\n  }, [query]); //useEffect:   [] will not run the effect array we gave is dependency\n  // whenever some click then only this query will work.\n  // to call api ,using axios installing axois in cdm\n\n  const getRecipe = async () => {\n    const response = await axios.get(`https:api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    setRecipe(response.data.hits);\n    console.log(response.data.hits);\n  };\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n    console.log(e.target);\n  };\n\n  const updateQuery = e => {\n    e.preventDefault(); // this will stop the form to refresh\n\n    setQuery(search); // setQuery = search\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateQuery,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: search,\n        onChange: updateSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), recipe.map(recipe =>\n    /*#__PURE__*/\n    // will pass all props here title ,cal,img ,ingre in Recipe.js\n    _jsxDEV(Recipe, {\n      title: recipe.recipe.label,\n      calories: recipe.recipe.calories,\n      image: recipe.recipe.image,\n      ingredients: recipe.recipe.ingredients\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"JF9m7zd82+WJtNGfyxCWLJfpf0Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/princeissar/git/BeCode/React-Projects/receipe/src/App.js"],"names":["React","useState","useEffect","axios","Recipe","App","APP_ID","APP_KEY","recipe","setRecipe","search","setSearch","query","setQuery","getRecipe","response","get","data","hits","console","log","updateSearch","e","target","value","updateQuery","preventDefault","map","label","calories","image","ingredients"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAMC,MAAM,GAAG,UAAf;AACA,QAAMC,OAAO,GAAG,oCAAhB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC,CALa,CAK6B;AAC1C;;AACD,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAmBZ,QAAQ,CAAC,SAAD,CAAjC;AACCC,EAAAA,SAAS,CAAC,MAAM;AAAG;AACjBY,IAAAA,SAAS;AACV,GAFQ,EAEN,CAACF,KAAD,CAFM,CAAT,CARa,CAUA;AACf;AACE;;AACA,QAAME,SAAS,GAAG,YAAY;AAC5B,UAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAW,iCAAgCJ,KAAM,WAAUN,MAAO,YAAWC,OAAQ,EAArF,CAAvB;AACAE,IAAAA,SAAS,CAACM,QAAQ,CAACE,IAAT,CAAcC,IAAf,CAAT;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACE,IAAT,CAAcC,IAA1B;AACD,GAJD;;AAMA,QAAMG,YAAY,GAAIC,CAAD,IAAO;AAC1BX,IAAAA,SAAS,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYE,CAAC,CAACC,MAAd;AACD,GAHD;;AAKA,QAAME,WAAW,GAAIH,CAAD,IAAM;AACxBA,IAAAA,CAAC,CAACI,cAAF,GADwB,CACJ;;AACpBb,IAAAA,QAAQ,CAACH,MAAD,CAAR,CAFwB,CAEP;AAClB,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACF;AAAM,MAAA,QAAQ,EAAEe,WAAhB;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEf,MAA1B;AAAkC,QAAA,QAAQ,EAAEW;AAA5C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADE,EAKDb,MAAM,CAACmB,GAAP,CAAYnB,MAAD;AAAA;AACV;AACA,YAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,MAAM,CAACA,MAAP,CAAcoB,KAA7B;AACQ,MAAA,QAAQ,EAAEpB,MAAM,CAACA,MAAP,CAAcqB,QADhC;AAEQ,MAAA,KAAK,EAAErB,MAAM,CAACA,MAAP,CAAcsB,KAF7B;AAGQ,MAAA,WAAW,EAAEtB,MAAM,CAACA,MAAP,CAAcuB;AAHnC;AAAA;AAAA;AAAA;AAAA,YAFD,CALC;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBD;;GA7CQ1B,G;;KAAAA,G;AAgDT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport './App.css';\nimport axios from \"axios\";\nimport Recipe from \"./Recipe\";\n\nfunction App() {\n  // useEffect need for api\n  const APP_ID = '7a2529fc';\n  const APP_KEY = '61efe58ac251fd4cb77555211348d646\\t';\n  const [recipe, setRecipe] = useState([]);\n  const [search, setSearch] = useState(\"\"); // not to have a default food\n  // don't want to render everytime someone writes a word but once he click search button\n const [query, setQuery]= useState('chicken');\n  useEffect(() => {  //\n    getRecipe();\n  }, [query]); //useEffect:   [] will not run the effect array we gave is dependency\n// whenever some click then only this query will work.\n  // to call api ,using axios installing axois in cdm\n  const getRecipe = async () => {\n    const response = await axios.get(`https:api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    setRecipe(response.data.hits);\n    console.log(response.data.hits);\n  };\n\n  const updateSearch = (e) => {\n    setSearch(e.target.value);\n    console.log(e.target);\n  }\n\n  const updateQuery = (e) =>{\n    e.preventDefault(); // this will stop the form to refresh\n    setQuery(search);// setQuery = search\n  }\n\n  return (\n      <div className=\"App\">\n    <form onSubmit={updateQuery}>\n      <input type=\"text\" value={search} onChange={updateSearch}/>\n      <button type=\"button\">Search</button>\n    </form>\n    {recipe.map((recipe) => (\n      // will pass all props here title ,cal,img ,ingre in Recipe.js\n      <Recipe title={recipe.recipe.label}\n              calories={recipe.recipe.calories}\n              image={recipe.recipe.image}\n              ingredients={recipe.recipe.ingredients}\n      />\n    ))}\n  </div>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}